// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: backup_media_file.proto

package internal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BackupMediaFile_MediaType int32

const (
	BackupMediaFile_IMAGES    BackupMediaFile_MediaType = 0
	BackupMediaFile_VIDEO     BackupMediaFile_MediaType = 1
	BackupMediaFile_AUDIO     BackupMediaFile_MediaType = 2
	BackupMediaFile_DOWNLOADS BackupMediaFile_MediaType = 3
)

// Enum value maps for BackupMediaFile_MediaType.
var (
	BackupMediaFile_MediaType_name = map[int32]string{
		0: "IMAGES",
		1: "VIDEO",
		2: "AUDIO",
		3: "DOWNLOADS",
	}
	BackupMediaFile_MediaType_value = map[string]int32{
		"IMAGES":    0,
		"VIDEO":     1,
		"AUDIO":     2,
		"DOWNLOADS": 3,
	}
)

func (x BackupMediaFile_MediaType) Enum() *BackupMediaFile_MediaType {
	p := new(BackupMediaFile_MediaType)
	*p = x
	return p
}

func (x BackupMediaFile_MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupMediaFile_MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_backup_media_file_proto_enumTypes[0].Descriptor()
}

func (BackupMediaFile_MediaType) Type() protoreflect.EnumType {
	return &file_backup_media_file_proto_enumTypes[0]
}

func (x BackupMediaFile_MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupMediaFile_MediaType.Descriptor instead.
func (BackupMediaFile_MediaType) EnumDescriptor() ([]byte, []int) {
	return file_backup_media_file_proto_rawDescGZIP(), []int{0, 0}
}

// *
// A file in Android's MediaStore.
//
// Excluded for now, but maybe interesting for later:
//   - MediaStore.MediaColumns.VOLUME_NAME
//   - MediaStore.MediaColumns.IS_DRM
//   - MediaStore.Images.ImageColumns.IS_PRIVATE
//   - MediaStore.Images.ImageColumns.DESCRIPTION
//   - MediaStore.Video.VideoColumns.IS_PRIVATE
//   - MediaStore.Video.VideoColumns.DESCRIPTION
//   - MediaStore.Video.VideoColumns.TAGS
//   - MediaStore.Video.VideoColumns.CATEGORY
//   - MediaStore.Video.VideoColumns.LANGUAGE
//   - MediaStore.Video.VideoColumns.BOOKMARK
//   - MediaStore.Audio.AudioColumns.BOOKMARK
type BackupMediaFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type BackupMediaFile_MediaType `protobuf:"varint,1,opt,name=type,proto3,enum=org.calyxos.backup.storage.backup.BackupMediaFile_MediaType" json:"type,omitempty"`
	// *
	// MediaStore.MediaColumns.DISPLAY_NAME
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// *
	// MediaStore.MediaColumns.RELATIVE_PATH
	Path string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	// *
	// MediaStore.MediaColumns.DATE_MODIFIED
	LastModified int64 `protobuf:"varint,4,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	// *
	// MediaStore.MediaColumns.OWNER_PACKAGE_NAME
	OwnerPackageName string `protobuf:"bytes,5,opt,name=owner_package_name,json=ownerPackageName,proto3" json:"owner_package_name,omitempty"`
	// *
	// MediaStore.MediaColumns.IS_FAVORITE
	IsFavorite bool `protobuf:"varint,6,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	// *
	// The size of the file in bytes.
	//
	// MediaStore.MediaColumns.SIZE
	Size int64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	// *
	// This is empty for MediaStore.VOLUME_EXTERNAL_PRIMARY
	Volume string `protobuf:"bytes,8,opt,name=volume,proto3" json:"volume,omitempty"`
	// *
	// An ordered list of chunk IDs whose chunks that make up the file's content.
	ChunkIds []string `protobuf:"bytes,9,rep,name=chunk_ids,json=chunkIds,proto3" json:"chunk_ids,omitempty"`
	// *
	// If there is a single chunk ID and this is not 0, then the chunk ID refers to a zip chunk
	// and this file can be found at the zip entry with this index name.
	ZipIndex int32 `protobuf:"varint,10,opt,name=zip_index,json=zipIndex,proto3" json:"zip_index,omitempty"`
}

func (x *BackupMediaFile) Reset() {
	*x = BackupMediaFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_backup_media_file_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackupMediaFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackupMediaFile) ProtoMessage() {}

func (x *BackupMediaFile) ProtoReflect() protoreflect.Message {
	mi := &file_backup_media_file_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackupMediaFile.ProtoReflect.Descriptor instead.
func (*BackupMediaFile) Descriptor() ([]byte, []int) {
	return file_backup_media_file_proto_rawDescGZIP(), []int{0}
}

func (x *BackupMediaFile) GetType() BackupMediaFile_MediaType {
	if x != nil {
		return x.Type
	}
	return BackupMediaFile_IMAGES
}

func (x *BackupMediaFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BackupMediaFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *BackupMediaFile) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

func (x *BackupMediaFile) GetOwnerPackageName() string {
	if x != nil {
		return x.OwnerPackageName
	}
	return ""
}

func (x *BackupMediaFile) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *BackupMediaFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *BackupMediaFile) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

func (x *BackupMediaFile) GetChunkIds() []string {
	if x != nil {
		return x.ChunkIds
	}
	return nil
}

func (x *BackupMediaFile) GetZipIndex() int32 {
	if x != nil {
		return x.ZipIndex
	}
	return 0
}

var File_backup_media_file_proto protoreflect.FileDescriptor

var file_backup_media_file_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x6f, 0x72, 0x67, 0x2e, 0x63,
	0x61, 0x6c, 0x79, 0x78, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0xa3, 0x03, 0x0a,
	0x0f, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x50, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x61, 0x6c, 0x79, 0x78, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x69, 0x70, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x7a, 0x69, 0x70, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x3c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x53, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49,
	0x4f, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x4f, 0x57, 0x4e, 0x4c, 0x4f, 0x41, 0x44, 0x53,
	0x10, 0x03, 0x42, 0x05, 0x50, 0x01, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_backup_media_file_proto_rawDescOnce sync.Once
	file_backup_media_file_proto_rawDescData = file_backup_media_file_proto_rawDesc
)

func file_backup_media_file_proto_rawDescGZIP() []byte {
	file_backup_media_file_proto_rawDescOnce.Do(func() {
		file_backup_media_file_proto_rawDescData = protoimpl.X.CompressGZIP(file_backup_media_file_proto_rawDescData)
	})
	return file_backup_media_file_proto_rawDescData
}

var file_backup_media_file_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_backup_media_file_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_backup_media_file_proto_goTypes = []interface{}{
	(BackupMediaFile_MediaType)(0), // 0: org.calyxos.backup.storage.backup.BackupMediaFile.MediaType
	(*BackupMediaFile)(nil),        // 1: org.calyxos.backup.storage.backup.BackupMediaFile
}
var file_backup_media_file_proto_depIdxs = []int32{
	0, // 0: org.calyxos.backup.storage.backup.BackupMediaFile.type:type_name -> org.calyxos.backup.storage.backup.BackupMediaFile.MediaType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_backup_media_file_proto_init() }
func file_backup_media_file_proto_init() {
	if File_backup_media_file_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_backup_media_file_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackupMediaFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_backup_media_file_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_backup_media_file_proto_goTypes,
		DependencyIndexes: file_backup_media_file_proto_depIdxs,
		EnumInfos:         file_backup_media_file_proto_enumTypes,
		MessageInfos:      file_backup_media_file_proto_msgTypes,
	}.Build()
	File_backup_media_file_proto = out.File
	file_backup_media_file_proto_rawDesc = nil
	file_backup_media_file_proto_goTypes = nil
	file_backup_media_file_proto_depIdxs = nil
}
